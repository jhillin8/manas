version: '3.8'

services:
  # Core Services
  orchestrator:
    build: 
      context: ../../core/orchestrator
      dockerfile: Dockerfile
    container_name: manas-orchestrator
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - MANAS_ENV=production
      - LOG_LEVEL=info
    volumes:
      - orchestrator-data:/data
      - ./config:/config:ro
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  context-broker:
    build:
      context: ../../core/context-broker
      dockerfile: Dockerfile
    container_name: manas-context-broker
    restart: unless-stopped
    ports:
      - "8081:8081"
      - "9090:9090"  # gRPC
    environment:
      - BROKER_MODE=distributed
      - NATS_URL=nats://nats:4222
    depends_on:
      - nats
      - redis
    networks:
      - manas-network

  router:
    build:
      context: ../../core/router
      dockerfile: Dockerfile
    container_name: manas-router
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - ROUTING_STRATEGY=capability-based
      - CIRCUIT_BREAKER_ENABLED=true
    depends_on:
      - orchestrator
      - context-broker
    networks:
      - manas-network

  # Memory Services
  memory-service:
    build:
      context: ../../memory
      dockerfile: Dockerfile
    container_name: manas-memory
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - MEMORY_BACKEND=hybrid
      - VECTOR_DB_URL=http://qdrant:6333
      - GRAPH_DB_URL=bolt://neo4j:7687
    volumes:
      - memory-data:/data
    depends_on:
      - qdrant
      - neo4j
    networks:
      - manas-network

  # MCP Services
  anyquery:
    build:
      context: ../../core/anyquery
      dockerfile: Dockerfile
    container_name: manas-anyquery
    restart: unless-stopped
    ports:
      - "8102:8102"
    environment:
      - ANYQUERY_CONFIG=/config/config.yaml
      - ANYQUERY_DATA_DIR=/data
    volumes:
      - anyquery-data:/data
      - ../../core/anyquery/config.yaml:/config/config.yaml:ro
    depends_on:
      - memory-service
      - qdrant
      - neo4j
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8102/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  metatool:
    build:
      context: ../../core/metatool
      dockerfile: Dockerfile
    container_name: manas-metatool
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - DATABASE_URL=sqlite:///data/metatool.db
    volumes:
      - metatool-data:/data
      - ../../core/metatool/.env:/app/.env:ro
    depends_on:
      - anyquery
      - memory-service
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mindsdb:
    build:
      context: ../../core/mindsdb
      dockerfile: Dockerfile
    container_name: manas-mindsdb
    restart: unless-stopped
    ports:
      - "47334:47334"  # HTTP API
      - "47335:47335"  # MySQL API
      - "47336:47336"  # MCP Server
    environment:
      - MINDSDB_CONFIG_PATH=/opt/mindsdb/config.json
      - MINDSDB_STORAGE_DIR=/opt/mindsdb/var
    volumes:
      - mindsdb-data:/opt/mindsdb/var
      - ../../core/mindsdb/config.json:/opt/mindsdb/config.json:ro
    depends_on:
      - memory-service
      - qdrant
      - neo4j
      - redis
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:47334/api/status"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  pipedream:
    build:
      context: ../../core/pipedream
      dockerfile: Dockerfile
    container_name: manas-pipedream
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=production
      - MCP_TRANSPORT=http
      - MCP_HOST=0.0.0.0
      - MCP_PORT=3002
    volumes:
      - pipedream-data:/data
      - ../../core/pipedream/.env:/app/.env:ro
    depends_on:
      - metatool
      - memory-service
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pearl:
    build:
      context: ../../core/pearl
      dockerfile: Dockerfile
    container_name: manas-pearl
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - NODE_ENV=production
      - PEARL_ENDPOINT=https://mcp.pearl.com/sse
      - MCP_TRANSPORT=sse
      - MCP_HOST=0.0.0.0
      - MCP_PORT=3003
      - PEARL_AUTO_CONNECT=false
    volumes:
      - pearl-data:/data
      - ../../core/pearl/.env:/app/.env:ro
    depends_on:
      - metatool
      - orchestrator
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "node", "/app/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  endgame:
    build:
      context: ../../core/endgame
      dockerfile: Dockerfile
    container_name: manas-endgame
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - NODE_ENV=production
      - ENDGAME_API_URL=https://api.endgame.dev
      - ENDGAME_PLATFORM_URL=https://endgame.dev
      - MCP_TRANSPORT=stdio
      - MCP_HOST=0.0.0.0
      - MCP_PORT=3004
    volumes:
      - endgame-data:/data
      - ../../core/endgame/.env:/app/.env:ro
    depends_on:
      - pearl
      - orchestrator
    networks:
      - manas-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Infrastructure Services
  nats:
    image: nats:2.10-alpine
    container_name: manas-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    command: ["--js", "--sd", "/data"]
    volumes:
      - nats-data:/data
    networks:
      - manas-network

  redis:
    image: redis:7-alpine
    container_name: manas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - manas-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: manas-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - manas-network

  neo4j:
    image: neo4j:5-community
    container_name: manas-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/manas-graph-2024
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - manas-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: manas-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - manas-network

  grafana:
    image: grafana/grafana:latest
    container_name: manas-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=manas-admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - manas-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: manas-jaeger
    restart: unless-stopped
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI
      - "14268:14268"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - manas-network

volumes:
  orchestrator-data:
  memory-data:
  nats-data:
  redis-data:
  qdrant-data:
  neo4j-data:
  neo4j-logs:
  prometheus-data:
  grafana-data:
  anyquery-data:
  metatool-data:
  mindsdb-data:
  pipedream-data:
  pearl-data:
  endgame-data:

networks:
  manas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16